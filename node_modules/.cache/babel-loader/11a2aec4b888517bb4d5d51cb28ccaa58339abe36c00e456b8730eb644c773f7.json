{"ast":null,"code":"import Chart1 from './components/Chart1.vue';\nimport Chart2 from './components/Chart2.vue';\nimport Chart3 from './components/Chart3.vue';\nimport Chart4 from './components/Chart4.vue';\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: [],\n      rainArray: [],\n      rainFlagWithDate: {},\n      pm2_5Array: [],\n      timeArrayForAirPollution: [],\n      current_weather_desc: \"\",\n      current_temp: \"\",\n      current_wind: \"\",\n      current_rain: \"\",\n      localTime: \"\",\n      timezoneOffset: null,\n      errorOccurred: false\n    };\n  },\n  methods: {\n    getForecast: function () {\n      this.errorOccurred = false;\n      if (this.keyword === \"\") {\n        console.log(\"emp\");\n        return;\n      }\n      console.log(this.keyword);\n      axios.post('http://localhost:3000/sendData', {\n        keyword: this.keyword\n      }).then(response => {\n        console.log(response.data);\n        this.forecast(response.data);\n      }).catch(error => {\n        console.error(error);\n        this.errorOccurred = true;\n      });\n    },\n    forecast: function (data) {\n      this.display = true;\n      const city = data.city_country[0];\n      const country = data.city_country[1];\n      this.city = city;\n      this.country = country;\n      this.timezoneOffset = data.city.timezone;\n      setInterval(this.updateLocalTime, 1000);\n      let text = data.current_weather.weather[0].description;\n      this.current_weather_desc = text.slice(0, 1).toUpperCase() + text.slice(1);\n      this.current_temp = data.current_weather.main.temp;\n      this.current_wind = data.current_weather.wind.speed;\n      if (\"rain\" in data.current_weather) {\n        const rain = data.current_weather.rain[\"1h\"];\n        this.current_rain = \", Rain Volume: \" + rain + \"mm/h\";\n      }\n      let temperatureArray = [];\n      let windArray = [];\n      let rainArray = [];\n      let timeArray = [];\n      let rainFlagWithDate = {};\n      let datetimeArray = [];\n      for (let i = 0; i < data.list.length; i++) {\n        const unix = data.list[i].dt;\n        const offsetMs = this.timezoneOffset * 1000;\n        const tmp = new Date();\n        let diff = tmp.getTimezoneOffset() * 60000;\n        const localTimeMs = unix * 1000 + offsetMs + diff;\n        const d = new Date(localTimeMs);\n        let localDatetime = d.toLocaleString(\"en-IE\", {\n          hour12: true,\n          month: \"short\",\n          day: \"2-digit\",\n          hour: \"2-digit\"\n        });\n        localDatetime = localDatetime.replaceAll(\".\", \"\");\n        datetimeArray[i] = localDatetime;\n\n        //Date object returns different values depending on a web brouser\n        //For Safari\n        const num = localDatetime.indexOf(\" at\");\n        if (num != -1) {\n          localDatetime = localDatetime.replace(\" at\", \",\");\n        }\n        let datetimeForX = localDatetime.substring(8);\n        if (datetimeForX === \"00 am\" || datetimeForX === \"01 am\" || datetimeForX === \"02 am\" || datetimeForX === \"12 am\") {\n          datetimeForX = localDatetime.substring(0, 6);\n        } else {\n          if (datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\";\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\");\n          let position = datetimeForX.search(\"0\");\n          if (position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\");\n          }\n        }\n        timeArray[i] = datetimeForX;\n        let date = localDatetime.substring(0, 6);\n        rainFlagWithDate[date] = false;\n        const temprature = data.list[i].main.temp;\n        temperatureArray[i] = temprature;\n        const windSpeed = data.list[i].wind.speed;\n        windArray[i] = windSpeed;\n        if (\"rain\" in data.list[i]) {\n          const rainfall = data.list[i].rain[\"3h\"];\n          rainArray[i] = rainfall;\n        } else {\n          const rainfall = 0;\n          rainArray[i] = rainfall;\n        }\n      }\n      this.temperatureArray = temperatureArray;\n      this.windArray = windArray;\n      this.rainArray = rainArray;\n      this.timeArray = timeArray;\n      for (let p = 0; p < rainArray.length; p++) {\n        const rain = rainArray[p];\n        if (rain > 0) {\n          let datetime = datetimeArray[p];\n          let date = datetime.substring(0, 6);\n          rainFlagWithDate[date] = true;\n        }\n      }\n      this.rainFlagWithDate = rainFlagWithDate;\n      let timeArrayForAirPollution = [];\n      let pm2_5Array = [];\n      for (let q = 0; q < data.air_pollution.list.length; q++) {\n        const unix = data.air_pollution.list[q].dt;\n        const offsetMs = this.timezoneOffset * 1000;\n        const tmp = new Date();\n        let diff = tmp.getTimezoneOffset() * 60000;\n        const localTimeMs = unix * 1000 + offsetMs + diff;\n        const d = new Date(localTimeMs);\n        let localDatetime = d.toLocaleString(\"en-IE\", {\n          hour12: true,\n          month: \"short\",\n          day: \"2-digit\",\n          hour: \"2-digit\"\n        });\n        localDatetime = localDatetime.replaceAll(\".\", \"\");\n\n        //Date object returns different values depending on a web brouser\n        //For Safari\n        const num = localDatetime.indexOf(\" at\");\n        if (num != -1) {\n          localDatetime = localDatetime.replace(\" at\", \",\");\n        }\n        let datetimeForX = localDatetime.substring(8);\n        if (datetimeForX === \"00 am\" || datetimeForX === \"12 am\" || datetimeForX === \"01 am\") {\n          datetimeForX = localDatetime.substring(0, 6);\n        } else {\n          if (datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\";\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\");\n          let position = datetimeForX.search(\"0\");\n          if (position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\");\n          }\n        }\n        timeArrayForAirPollution[q] = datetimeForX;\n        const pm2_5 = data.air_pollution.list[q].components.pm2_5;\n        pm2_5Array[q] = pm2_5;\n      }\n      this.pm2_5Array = pm2_5Array;\n      this.timeArrayForAirPollution = timeArrayForAirPollution;\n    },\n    updateLocalTime: function () {\n      if (this.timezoneOffset != null) {\n        const currentTime = new Date();\n        const utcTime = new Date(currentTime.getTime() + currentTime.getTimezoneOffset() * 60000);\n        const offsetMs = this.timezoneOffset * 1000;\n        const localTimeMs = utcTime.getTime() + offsetMs;\n        let localTime = new Date(localTimeMs);\n        localTime = localTime.toLocaleString('en-IE', {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        });\n        this.currentTime = localTime;\n      }\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3,\n    Chart4\n  }\n};","map":{"version":3,"names":["Chart1","Chart2","Chart3","Chart4","axios","name","data","keyword","display","country","city","currentTime","timeArray","temperatureArray","windArray","rainArray","rainFlagWithDate","pm2_5Array","timeArrayForAirPollution","current_weather_desc","current_temp","current_wind","current_rain","localTime","timezoneOffset","errorOccurred","methods","getForecast","console","log","post","then","response","forecast","catch","error","city_country","timezone","setInterval","updateLocalTime","text","current_weather","weather","description","slice","toUpperCase","main","temp","wind","speed","rain","datetimeArray","i","list","length","unix","dt","offsetMs","tmp","Date","diff","getTimezoneOffset","localTimeMs","d","localDatetime","toLocaleString","hour12","month","day","hour","replaceAll","num","indexOf","replace","datetimeForX","substring","position","search","date","temprature","windSpeed","rainfall","p","datetime","q","air_pollution","pm2_5","components","utcTime","getTime","year","minute","second"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"contents\">\n    <h1 class=\"app-title\">Weather Forecast App</h1>\n    <form action class=\"form-contents\" v-if=\"!errorOccurred\">\n        <input class=\"input-box\" type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n        <input class=\"go-button\" type=\"submit\" value=\"Go\" @click.prevent=\"getForecast\" />\n    </form>\n    <div v-else>\n      <p class=\"invalid\">Invalid Input: Please type in a valid city name</p>\n      <button class=\"try-again-button\" @click=\"errorOccurred = false\">Try Again</button>\n    </div>\n  \n    <span :class=\"{data : !display}\">\n      <h1>{{localTime}}</h1>\n      <div class=\"city-time\">\n        <h2 class=\"city-info\">{{city}}({{country}})</h2>\n        <h3 class=\"time-info\">Current Local Time: {{currentTime}}</h3>\n      </div>\n      <div class=\"current_weather\">\n        <h3 class=\"weather-title\">Current Weather</h3>\n        <div class=\"info\">\n          <h3 class=\"weather-desc\">{{current_weather_desc}}</h3>\n          <h4 class=\"temperature-info\">Temperature: {{current_temp}}Â°C, Wind Speed: {{current_wind}} meter/sec{{current_rain}}</h4>\n        </div>\n      </div>\n    </span>\n\n    <span :class=\"{data : !display}\">\n      <h3 class=\"forecast-title\">Weather Forecast</h3>\n    </span>\n    <div class=\"forecast\">\n      <Chart1 :temperatureArray=\"temperatureArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <Chart2 :windArray=\"windArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <Chart3 :rainArray=\"rainArray\" :rainFlagWithDate=\"rainFlagWithDate\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <Chart4 :pm2_5Array=\"pm2_5Array\" :timeArrayForAirPollution=\"timeArrayForAirPollution\" :display=\"display\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Chart1 from './components/Chart1.vue'\nimport Chart2 from './components/Chart2.vue'\nimport Chart3 from './components/Chart3.vue'\nimport Chart4 from './components/Chart4.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: [],\n      rainArray: [],\n      rainFlagWithDate: {},\n      pm2_5Array: [],\n      timeArrayForAirPollution: [],\n      current_weather_desc: \"\",\n      current_temp: \"\",\n      current_wind: \"\",\n      current_rain: \"\",\n      localTime: \"\",\n      timezoneOffset: null,\n      errorOccurred: false,\n    }\n  },\n  methods: {\n    getForecast: function() {\n      this.errorOccurred = false\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.forecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n          this.errorOccurred = true\n      })\n    },\n    forecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      this.timezoneOffset = data.city.timezone\n      setInterval(this.updateLocalTime, 1000)\n\n      let text = data.current_weather.weather[0].description\n      this.current_weather_desc = text.slice( 0, 1 ).toUpperCase() + text.slice( 1 ) ;\n      this.current_temp = data.current_weather.main.temp\n      this.current_wind = data.current_weather.wind.speed\n      if(\"rain\" in data.current_weather) {\n        const rain = data.current_weather.rain[\"1h\"]\n        this.current_rain = \", Rain Volume: \" + rain + \"mm/h\"\n      }\n\n      let temperatureArray = []\n      let windArray = []\n      let rainArray = []\n      let timeArray = []\n      let rainFlagWithDate = {}\n      let datetimeArray = []\n      for(let i = 0; i < data.list.length; i++) {\n          const unix = data.list[i].dt\n          const offsetMs = this.timezoneOffset * 1000\n          const tmp = new Date();\n          let diff = tmp.getTimezoneOffset() * 60000;\n          const localTimeMs = unix * 1000 + offsetMs + diff\n          const d = new Date(localTimeMs)\n          let localDatetime = d.toLocaleString(\"en-IE\", { hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n          localDatetime = localDatetime.replaceAll(\".\", \"\")\n\n          datetimeArray[i] = localDatetime\n\n          //Date object returns different values depending on a web brouser\n          //For Safari\n          const num = localDatetime.indexOf(\" at\")\n          if(num != -1) {\n            localDatetime = localDatetime.replace(\" at\", \",\")\n          }\n\n          let datetimeForX = localDatetime.substring(8)\n          if(datetimeForX === \"00 am\" || datetimeForX === \"01 am\" || datetimeForX === \"02 am\" || datetimeForX === \"12 am\") {\n            datetimeForX = localDatetime.substring(0, 6)\n          }\n          else {\n            if(datetimeForX === \"00 pm\") {\n              datetimeForX = \"12 pm\"\n            }\n            datetimeForX = datetimeForX.replace(\" \", \"\")\n            let position = datetimeForX.search(\"0\")\n            if(position === 0) {\n              datetimeForX = datetimeForX.replace(\"0\", \"\")\n            }\n          }\n          timeArray[i] = datetimeForX\n          let date = localDatetime.substring(0, 6)\n          rainFlagWithDate[date] = false\n\n          const temprature = data.list[i].main.temp\n          temperatureArray[i] = temprature\n\n          const windSpeed = data.list[i].wind.speed\n          windArray[i] = windSpeed\n\n          if(\"rain\" in data.list[i]) {\n            const rainfall = data.list[i].rain[\"3h\"]\n            rainArray[i] = rainfall\n          }\n          else {\n            const rainfall = 0\n            rainArray[i] = rainfall\n          }\n      }\n      this.temperatureArray = temperatureArray\n      this.windArray = windArray\n      this.rainArray = rainArray\n      this.timeArray = timeArray\n\n      for(let p = 0; p < rainArray.length; p++) {\n        const rain = rainArray[p]\n        if(rain > 0) {\n          let datetime = datetimeArray[p]\n          let date = datetime.substring(0, 6)\n          rainFlagWithDate[date] = true\n        }\n      }\n      this.rainFlagWithDate = rainFlagWithDate\n\n      let timeArrayForAirPollution = []\n      let pm2_5Array = []\n      for(let q = 0; q < data.air_pollution.list.length; q++) {\n        const unix = data.air_pollution.list[q].dt\n        const offsetMs = this.timezoneOffset * 1000\n        const tmp = new Date();\n        let diff = tmp.getTimezoneOffset() * 60000;\n        const localTimeMs = unix * 1000 + offsetMs + diff\n        const d = new Date(localTimeMs)\n\n        let localDatetime = d.toLocaleString(\"en-IE\", { hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n        localDatetime = localDatetime.replaceAll(\".\", \"\")\n\n        //Date object returns different values depending on a web brouser\n        //For Safari\n        const num = localDatetime.indexOf(\" at\")\n        if(num != -1) {\n          localDatetime = localDatetime.replace(\" at\", \",\")\n        }\n\n        let datetimeForX = localDatetime.substring(8)\n        if(datetimeForX === \"00 am\" || datetimeForX === \"12 am\" || datetimeForX === \"01 am\") {\n          datetimeForX = localDatetime.substring(0, 6)\n        }\n        else {\n          if(datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\"\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\")\n          let position = datetimeForX.search(\"0\")\n          if(position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\")\n          }\n        }\n        timeArrayForAirPollution[q] = datetimeForX\n\n        const pm2_5 = data.air_pollution.list[q].components.pm2_5\n        pm2_5Array[q] = pm2_5\n      }\n      this.pm2_5Array = pm2_5Array\n      this.timeArrayForAirPollution = timeArrayForAirPollution\n    },\n    updateLocalTime: function() {\n      if (this.timezoneOffset != null) {\n        const currentTime = new Date()\n        const utcTime = new Date(currentTime.getTime() + currentTime.getTimezoneOffset() * 60000)\n        const offsetMs = this.timezoneOffset * 1000\n        const localTimeMs = utcTime.getTime() + offsetMs\n        let localTime = new Date(localTimeMs)\n        localTime = localTime.toLocaleString('en-IE', {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n        })\n        this.currentTime = localTime;\n      }\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3,\n    Chart4\n  }\n}\n</script>\n\n<style>\n#app .contents {\n  padding-left: 20px;\n}\n\n#app .app-title {\n  font-size: 50px;\n}\n\n#app .input-box {\n  width: 250px;\n  height: 40px;\n  font-size: 20px;\n}\n\n#app .go-button {\n  height: 45px;\n  font-size: 20px;\n}\n\n#app span.data {\n  display: none;\n}\n\n#app .city-time {\n  position: relative;\n}\n\n#app .city-info {\n  font-size: 45px;\n}\n\n#app .time-info {\n  font-size: 25px;\n  text-align: center;\n  position: absolute;\n\ttop: 50%;\n}\n\n#app .weather-title {\n  font-size: 30px;\n  margin-bottom: 0;\n  padding-top: 35px;\n}\n\n#app .info {\n  padding-left: 15px;\n}\n\n#app .weather-desc {\n  font-size: 25px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n#app .temperature-info {\n  font-size: 20px;\n  margin-top: 0;\n}\n\n#app .forecast-title {\n  font-size: 30px;\n  margin-bottom: 0;\n}\n\n#app .forecast {\n  padding-left: 15px;\n}\n\n#app .invalid {\n  font-size: 25px;\n}\n\n#app .try-again-button {\n  font-size: 15px;\n}\n</style>\n"],"mappings":"AAwCA,OAAOA,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,UAAU,EAAE,EAAE;MACdC,wBAAwB,EAAE,EAAE;MAC5BC,oBAAoB,EAAE,EAAE;MACxBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,EAAE,SAAAA,CAAA,EAAW;MACtB,IAAI,CAACF,aAAY,GAAI,KAAI;MACzB,IAAG,IAAI,CAAClB,OAAM,KAAM,EAAE,EACtB;QACIqB,OAAO,CAACC,GAAG,CAAC,KAAK;QACjB;MACJ;MACAD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,OAAO;MACxBH,KAAK,CAAC0B,IAAI,CAAC,gCAAgC,EAAE;QAAEvB,OAAO,EAAE,IAAI,CAACA;MAAQ,CAAC,EACrEwB,IAAI,CAACC,QAAO,IAAK;QACdJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC1B,IAAI;QACzB,IAAI,CAAC2B,QAAQ,CAACD,QAAQ,CAAC1B,IAAI;MAC/B,CAAC,EACA4B,KAAK,CAACC,KAAI,IAAK;QACZP,OAAO,CAACO,KAAK,CAACA,KAAK;QACnB,IAAI,CAACV,aAAY,GAAI,IAAG;MAC5B,CAAC;IACH,CAAC;IACDQ,QAAQ,EAAE,SAAAA,CAAS3B,IAAI,EAAE;MACvB,IAAI,CAACE,OAAM,GAAI,IAAG;MAClB,MAAME,IAAG,GAAIJ,IAAI,CAAC8B,YAAY,CAAC,CAAC;MAChC,MAAM3B,OAAM,GAAIH,IAAI,CAAC8B,YAAY,CAAC,CAAC;MACnC,IAAI,CAAC1B,IAAG,GAAIA,IAAG;MACf,IAAI,CAACD,OAAM,GAAIA,OAAM;MAErB,IAAI,CAACe,cAAa,GAAIlB,IAAI,CAACI,IAAI,CAAC2B,QAAO;MACvCC,WAAW,CAAC,IAAI,CAACC,eAAe,EAAE,IAAI;MAEtC,IAAIC,IAAG,GAAIlC,IAAI,CAACmC,eAAe,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,WAAU;MACrD,IAAI,CAACxB,oBAAmB,GAAIqB,IAAI,CAACI,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,CAACC,WAAW,CAAC,IAAIL,IAAI,CAACI,KAAK,CAAE,CAAE;MAC7E,IAAI,CAACxB,YAAW,GAAId,IAAI,CAACmC,eAAe,CAACK,IAAI,CAACC,IAAG;MACjD,IAAI,CAAC1B,YAAW,GAAIf,IAAI,CAACmC,eAAe,CAACO,IAAI,CAACC,KAAI;MAClD,IAAG,MAAK,IAAK3C,IAAI,CAACmC,eAAe,EAAE;QACjC,MAAMS,IAAG,GAAI5C,IAAI,CAACmC,eAAe,CAACS,IAAI,CAAC,IAAI;QAC3C,IAAI,CAAC5B,YAAW,GAAI,iBAAgB,GAAI4B,IAAG,GAAI,MAAK;MACtD;MAEA,IAAIrC,gBAAe,GAAI,EAAC;MACxB,IAAIC,SAAQ,GAAI,EAAC;MACjB,IAAIC,SAAQ,GAAI,EAAC;MACjB,IAAIH,SAAQ,GAAI,EAAC;MACjB,IAAII,gBAAe,GAAI,CAAC;MACxB,IAAImC,aAAY,GAAI,EAAC;MACrB,KAAI,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI9C,IAAI,CAAC+C,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QACtC,MAAMG,IAAG,GAAIjD,IAAI,CAAC+C,IAAI,CAACD,CAAC,CAAC,CAACI,EAAC;QAC3B,MAAMC,QAAO,GAAI,IAAI,CAACjC,cAAa,GAAI,IAAG;QAC1C,MAAMkC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;QACtB,IAAIC,IAAG,GAAIF,GAAG,CAACG,iBAAiB,CAAC,IAAI,KAAK;QAC1C,MAAMC,WAAU,GAAIP,IAAG,GAAI,IAAG,GAAIE,QAAO,GAAIG,IAAG;QAChD,MAAMG,CAAA,GAAI,IAAIJ,IAAI,CAACG,WAAW;QAC9B,IAAIE,aAAY,GAAID,CAAC,CAACE,cAAc,CAAC,OAAO,EAAE;UAAEC,MAAM,EAAE,IAAI;UAAEC,KAAK,EAAE,OAAO;UAAEC,GAAG,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAC;QAC9GL,aAAY,GAAIA,aAAa,CAACM,UAAU,CAAC,GAAG,EAAE,EAAE;QAEhDnB,aAAa,CAACC,CAAC,IAAIY,aAAY;;QAE/B;QACA;QACA,MAAMO,GAAE,GAAIP,aAAa,CAACQ,OAAO,CAAC,KAAK;QACvC,IAAGD,GAAE,IAAK,CAAC,CAAC,EAAE;UACZP,aAAY,GAAIA,aAAa,CAACS,OAAO,CAAC,KAAK,EAAE,GAAG;QAClD;QAEA,IAAIC,YAAW,GAAIV,aAAa,CAACW,SAAS,CAAC,CAAC;QAC5C,IAAGD,YAAW,KAAM,OAAM,IAAKA,YAAW,KAAM,OAAM,IAAKA,YAAW,KAAM,OAAM,IAAKA,YAAW,KAAM,OAAO,EAAE;UAC/GA,YAAW,GAAIV,aAAa,CAACW,SAAS,CAAC,CAAC,EAAE,CAAC;QAC7C,OACK;UACH,IAAGD,YAAW,KAAM,OAAO,EAAE;YAC3BA,YAAW,GAAI,OAAM;UACvB;UACAA,YAAW,GAAIA,YAAY,CAACD,OAAO,CAAC,GAAG,EAAE,EAAE;UAC3C,IAAIG,QAAO,GAAIF,YAAY,CAACG,MAAM,CAAC,GAAG;UACtC,IAAGD,QAAO,KAAM,CAAC,EAAE;YACjBF,YAAW,GAAIA,YAAY,CAACD,OAAO,CAAC,GAAG,EAAE,EAAE;UAC7C;QACF;QACA7D,SAAS,CAACwC,CAAC,IAAIsB,YAAW;QAC1B,IAAII,IAAG,GAAId,aAAa,CAACW,SAAS,CAAC,CAAC,EAAE,CAAC;QACvC3D,gBAAgB,CAAC8D,IAAI,IAAI,KAAI;QAE7B,MAAMC,UAAS,GAAIzE,IAAI,CAAC+C,IAAI,CAACD,CAAC,CAAC,CAACN,IAAI,CAACC,IAAG;QACxClC,gBAAgB,CAACuC,CAAC,IAAI2B,UAAS;QAE/B,MAAMC,SAAQ,GAAI1E,IAAI,CAAC+C,IAAI,CAACD,CAAC,CAAC,CAACJ,IAAI,CAACC,KAAI;QACxCnC,SAAS,CAACsC,CAAC,IAAI4B,SAAQ;QAEvB,IAAG,MAAK,IAAK1E,IAAI,CAAC+C,IAAI,CAACD,CAAC,CAAC,EAAE;UACzB,MAAM6B,QAAO,GAAI3E,IAAI,CAAC+C,IAAI,CAACD,CAAC,CAAC,CAACF,IAAI,CAAC,IAAI;UACvCnC,SAAS,CAACqC,CAAC,IAAI6B,QAAO;QACxB,OACK;UACH,MAAMA,QAAO,GAAI;UACjBlE,SAAS,CAACqC,CAAC,IAAI6B,QAAO;QACxB;MACJ;MACA,IAAI,CAACpE,gBAAe,GAAIA,gBAAe;MACvC,IAAI,CAACC,SAAQ,GAAIA,SAAQ;MACzB,IAAI,CAACC,SAAQ,GAAIA,SAAQ;MACzB,IAAI,CAACH,SAAQ,GAAIA,SAAQ;MAEzB,KAAI,IAAIsE,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAInE,SAAS,CAACuC,MAAM,EAAE4B,CAAC,EAAE,EAAE;QACxC,MAAMhC,IAAG,GAAInC,SAAS,CAACmE,CAAC;QACxB,IAAGhC,IAAG,GAAI,CAAC,EAAE;UACX,IAAIiC,QAAO,GAAIhC,aAAa,CAAC+B,CAAC;UAC9B,IAAIJ,IAAG,GAAIK,QAAQ,CAACR,SAAS,CAAC,CAAC,EAAE,CAAC;UAClC3D,gBAAgB,CAAC8D,IAAI,IAAI,IAAG;QAC9B;MACF;MACA,IAAI,CAAC9D,gBAAe,GAAIA,gBAAe;MAEvC,IAAIE,wBAAuB,GAAI,EAAC;MAChC,IAAID,UAAS,GAAI,EAAC;MAClB,KAAI,IAAImE,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI9E,IAAI,CAAC+E,aAAa,CAAChC,IAAI,CAACC,MAAM,EAAE8B,CAAC,EAAE,EAAE;QACtD,MAAM7B,IAAG,GAAIjD,IAAI,CAAC+E,aAAa,CAAChC,IAAI,CAAC+B,CAAC,CAAC,CAAC5B,EAAC;QACzC,MAAMC,QAAO,GAAI,IAAI,CAACjC,cAAa,GAAI,IAAG;QAC1C,MAAMkC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;QACtB,IAAIC,IAAG,GAAIF,GAAG,CAACG,iBAAiB,CAAC,IAAI,KAAK;QAC1C,MAAMC,WAAU,GAAIP,IAAG,GAAI,IAAG,GAAIE,QAAO,GAAIG,IAAG;QAChD,MAAMG,CAAA,GAAI,IAAIJ,IAAI,CAACG,WAAW;QAE9B,IAAIE,aAAY,GAAID,CAAC,CAACE,cAAc,CAAC,OAAO,EAAE;UAAEC,MAAM,EAAE,IAAI;UAAEC,KAAK,EAAE,OAAO;UAAEC,GAAG,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAC;QAC9GL,aAAY,GAAIA,aAAa,CAACM,UAAU,CAAC,GAAG,EAAE,EAAE;;QAEhD;QACA;QACA,MAAMC,GAAE,GAAIP,aAAa,CAACQ,OAAO,CAAC,KAAK;QACvC,IAAGD,GAAE,IAAK,CAAC,CAAC,EAAE;UACZP,aAAY,GAAIA,aAAa,CAACS,OAAO,CAAC,KAAK,EAAE,GAAG;QAClD;QAEA,IAAIC,YAAW,GAAIV,aAAa,CAACW,SAAS,CAAC,CAAC;QAC5C,IAAGD,YAAW,KAAM,OAAM,IAAKA,YAAW,KAAM,OAAM,IAAKA,YAAW,KAAM,OAAO,EAAE;UACnFA,YAAW,GAAIV,aAAa,CAACW,SAAS,CAAC,CAAC,EAAE,CAAC;QAC7C,OACK;UACH,IAAGD,YAAW,KAAM,OAAO,EAAE;YAC3BA,YAAW,GAAI,OAAM;UACvB;UACAA,YAAW,GAAIA,YAAY,CAACD,OAAO,CAAC,GAAG,EAAE,EAAE;UAC3C,IAAIG,QAAO,GAAIF,YAAY,CAACG,MAAM,CAAC,GAAG;UACtC,IAAGD,QAAO,KAAM,CAAC,EAAE;YACjBF,YAAW,GAAIA,YAAY,CAACD,OAAO,CAAC,GAAG,EAAE,EAAE;UAC7C;QACF;QACAvD,wBAAwB,CAACkE,CAAC,IAAIV,YAAW;QAEzC,MAAMY,KAAI,GAAIhF,IAAI,CAAC+E,aAAa,CAAChC,IAAI,CAAC+B,CAAC,CAAC,CAACG,UAAU,CAACD,KAAI;QACxDrE,UAAU,CAACmE,CAAC,IAAIE,KAAI;MACtB;MACA,IAAI,CAACrE,UAAS,GAAIA,UAAS;MAC3B,IAAI,CAACC,wBAAuB,GAAIA,wBAAuB;IACzD,CAAC;IACDqB,eAAe,EAAE,SAAAA,CAAA,EAAW;MAC1B,IAAI,IAAI,CAACf,cAAa,IAAK,IAAI,EAAE;QAC/B,MAAMb,WAAU,GAAI,IAAIgD,IAAI,CAAC;QAC7B,MAAM6B,OAAM,GAAI,IAAI7B,IAAI,CAAChD,WAAW,CAAC8E,OAAO,CAAC,IAAI9E,WAAW,CAACkD,iBAAiB,CAAC,IAAI,KAAK;QACxF,MAAMJ,QAAO,GAAI,IAAI,CAACjC,cAAa,GAAI,IAAG;QAC1C,MAAMsC,WAAU,GAAI0B,OAAO,CAACC,OAAO,CAAC,IAAIhC,QAAO;QAC/C,IAAIlC,SAAQ,GAAI,IAAIoC,IAAI,CAACG,WAAW;QACpCvC,SAAQ,GAAIA,SAAS,CAAC0C,cAAc,CAAC,OAAO,EAAE;UAC5CyB,IAAI,EAAE,SAAS;UACfvB,KAAK,EAAE,SAAS;UAChBC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfsB,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC;QACD,IAAI,CAACjF,WAAU,GAAIY,SAAS;MAC9B;IACF;EACF,CAAC;EACDgE,UAAU,EAAE;IACVvF,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}