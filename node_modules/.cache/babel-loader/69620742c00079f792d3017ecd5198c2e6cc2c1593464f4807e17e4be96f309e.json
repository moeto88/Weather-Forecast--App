{"ast":null,"code":"import Chart1 from './components/Chart1.vue';\nimport Chart2 from './components/Chart2.vue';\nimport Chart3 from './components/Chart3.vue';\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: []\n    };\n  },\n  methods: {\n    getForecast: function () {\n      if (this.keyword === \"\") {\n        console.log(\"emp\");\n        return;\n      }\n      console.log(this.keyword);\n      axios.post('http://localhost:3000/sendData', {\n        keyword: this.keyword\n      }).then(response => {\n        console.log(response.data);\n        this.displayForecast(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    displayForecast: function (data) {\n      this.display = true;\n      const city = data.city_country[0];\n      const country = data.city_country[1];\n      this.city = city;\n      this.country = country;\n      const time_data = data.current_time;\n      this.currentTime = time_data.datetime;\n      const timezone_id = time_data.timezone_location;\n      let datetimeArray = [];\n      let temperatureArray = [];\n      let windArray = [];\n      for (let i = 0; i < data.list.length; i++) {\n        const UTCDatetime = data.list[i].dt_txt;\n        const year = UTCDatetime.substr(0, 4);\n        const month = UTCDatetime.substr(5, 2);\n        const day = UTCDatetime.substr(8, 2);\n        const hour = UTCDatetime.substr(11, 2);\n        const minute = UTCDatetime.substr(14, 2);\n        const second = UTCDatetime.substr(17, 2);\n        const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\n        let localDatetime = d.toLocaleString(\"en-IE\", {\n          timeZone: timezone_id,\n          hour12: true,\n          month: \"short\",\n          day: \"2-digit\",\n          hour: \"2-digit\"\n        });\n        localDatetime = localDatetime.replaceAll(\".\", \"\");\n        datetimeArray[i] = localDatetime;\n        const temprature = data.list[i].main.temp;\n        temperatureArray[i] = temprature;\n        const windSpeed = data.list[i].wind.speed;\n        windArray[i] = windSpeed;\n      }\n      this.temperatureArray = temperatureArray;\n      this.windArray = windArray;\n      let timeArray = [];\n      for (let t = 0; t < datetimeArray.length; t++) {\n        let datetime = datetimeArray[t];\n        let hour = datetime.substring(8);\n        if (hour === \"00 am\" || hour === \"01 am\" || hour === \"02 am\") {\n          hour = datetime.substring(0, 6);\n        } else {\n          if (hour === \"00 pm\") {\n            hour = \"12 pm\";\n          }\n          hour = hour.replace(\" \", \"\");\n          let position = hour.search(\"0\");\n          if (position === 0) {\n            hour = hour.replace(\"0\", \"\");\n          }\n        }\n        timeArray[t] = hour;\n      }\n      this.timeArray = timeArray;\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3\n  }\n};","map":{"version":3,"names":["Chart1","Chart2","Chart3","axios","name","data","keyword","display","country","city","currentTime","timeArray","temperatureArray","windArray","methods","getForecast","console","log","post","then","response","displayForecast","catch","error","city_country","time_data","current_time","datetime","timezone_id","timezone_location","datetimeArray","i","list","length","UTCDatetime","dt_txt","year","substr","month","day","hour","minute","second","d","Date","UTC","localDatetime","toLocaleString","timeZone","hour12","replaceAll","temprature","main","temp","windSpeed","wind","speed","t","substring","replace","position","search","components"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <h1>Weather Forecast App</h1>\n  <form action>\n      <input type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n      <input type=\"submit\" value=\"Go!\" @click.prevent=\"getForecast\" />\n  </form>\n\n  <span :class=\"{data : !display}\">\n      <h2>{{city}}({{country}})</h2>\n      <h3>Current Local Time: {{currentTime}}</h3>\n  </span>\n  <Chart1 :temperatureArray=\"temperatureArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n  <Chart2 :windArray=\"windArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n  <Chart3 :temperatureArray=\"temperatureArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n  \n</template>\n\n<script>\nimport Chart1 from './components/Chart1.vue'\nimport Chart2 from './components/Chart2.vue'\nimport Chart3 from './components/Chart3.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: []\n    }\n  },\n  methods: {\n    getForecast: function() {\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.displayForecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n      })\n    },\n    displayForecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      const time_data = data.current_time\n      this.currentTime = time_data.datetime\n\n      const timezone_id = time_data.timezone_location\n      let datetimeArray = []\n      let temperatureArray = []\n      let windArray = []\n      for(let i = 0; i < data.list.length; i++)\n      {\n          const UTCDatetime = data.list[i].dt_txt\n          const year = UTCDatetime.substr(0, 4)\n          const month = UTCDatetime.substr(5, 2)\n          const day = UTCDatetime.substr(8, 2)\n          const hour = UTCDatetime.substr(11, 2)\n          const minute = UTCDatetime.substr(14, 2)\n          const second = UTCDatetime.substr(17, 2)\n          const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second))\n          let localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id,  hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n          localDatetime = localDatetime.replaceAll(\".\", \"\")\n          datetimeArray[i] = localDatetime\n\n          const temprature = data.list[i].main.temp\n          temperatureArray[i] = temprature\n\n          const windSpeed = data.list[i].wind.speed\n          windArray[i] = windSpeed\n      }\n      this.temperatureArray = temperatureArray\n      this.windArray = windArray\n      \n      let timeArray = []\n      for(let t = 0; t < datetimeArray.length; t++)\n      {\n        let datetime = datetimeArray[t]\n        let hour = datetime.substring(8)\n        if(hour === \"00 am\" || hour === \"01 am\" || hour === \"02 am\")\n        {\n          hour = datetime.substring(0, 6)\n        }\n        else {\n          if(hour === \"00 pm\")\n          {\n            hour = \"12 pm\"\n          }\n          hour = hour.replace(\" \", \"\")\n          let position = hour.search(\"0\")\n          if(position === 0) {\n            hour = hour.replace(\"0\", \"\")\n          }\n        }\n        timeArray[t] = hour\n      }\n      \n      this.timeArray = timeArray\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3\n  }\n}\n</script>\n\n<style>\n#app span.data {\n  display: none;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}