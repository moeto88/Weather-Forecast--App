{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contents\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"app-title\"\n}, \"Weather Forecast App\", -1);\nconst _hoisted_3 = {\n  action: \"\"\n};\nconst _hoisted_4 = {\n  class: \"city-time\"\n};\nconst _hoisted_5 = {\n  class: \"city-info\"\n};\nconst _hoisted_6 = {\n  class: \"time-info\"\n};\nconst _hoisted_7 = {\n  class: \"current_weather\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"weather-title\"\n}, \"Current Weather\", -1);\nconst _hoisted_9 = {\n  class: \"info\"\n};\nconst _hoisted_10 = {\n  class: \"weather-desc\"\n};\nconst _hoisted_11 = {\n  class: \"temperature-info\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"forecast-title\"\n}, \"Weather Forecast\", -1);\nconst _hoisted_13 = [_hoisted_12];\nconst _hoisted_14 = {\n  class: \"forecast\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"temp\"\n}, \"Temperature(°C)\", -1);\nconst _hoisted_16 = [_hoisted_15];\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"wind\"\n}, \"Wind Speed(meter/sec)\", -1);\nconst _hoisted_18 = [_hoisted_17];\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"rain\"\n}, \"Rain Volume(mm/3h)\", -1);\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"pm2_5\"\n}, \"PM2.5 Concentration(μg/m3)\", -1);\nconst _hoisted_22 = [_hoisted_21];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Chart1 = _resolveComponent(\"Chart1\");\n  const _component_Chart2 = _resolveComponent(\"Chart2\");\n  const _component_Chart3 = _resolveComponent(\"Chart3\");\n  const _component_Chart4 = _resolveComponent(\"Chart4\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input-box\",\n    type: \"text\",\n    placeholder: \"type in a city name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event)\n  }, null, 512), [[_vModelText, $data.keyword]]), _createElementVNode(\"input\", {\n    class: \"go-button\",\n    type: \"submit\",\n    value: \"Go!\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.getForecast && $options.getForecast(...args), [\"prevent\"]))\n  })]), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", _hoisted_5, _toDisplayString($data.city) + \"(\" + _toDisplayString($data.country) + \")\", 1), _createElementVNode(\"h3\", _hoisted_6, \"Current Local Time: \" + _toDisplayString($data.currentTime), 1)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h3\", _hoisted_10, _toDisplayString($data.current_weather_desc), 1), _createElementVNode(\"h4\", _hoisted_11, \"Temperature: \" + _toDisplayString($data.current_temp) + \"°C, Wind Speed: \" + _toDisplayString($data.current_wind) + \" meter/sec\" + _toDisplayString($data.current_rain), 1)])])], 2), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, _hoisted_13, 2), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, _hoisted_16, 2), _createVNode(_component_Chart1, {\n    temperatureArray: $data.temperatureArray,\n    timeArray: $data.timeArray,\n    display: $data.display\n  }, null, 8, [\"temperatureArray\", \"timeArray\", \"display\"]), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, _hoisted_18, 2), _createVNode(_component_Chart2, {\n    windArray: $data.windArray,\n    timeArray: $data.timeArray,\n    display: $data.display\n  }, null, 8, [\"windArray\", \"timeArray\", \"display\"]), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, _hoisted_20, 2), _createVNode(_component_Chart3, {\n    rainArray: $data.rainArray,\n    rainFlagWithDate: $data.rainFlagWithDate,\n    timeArray: $data.timeArray,\n    display: $data.display\n  }, null, 8, [\"rainArray\", \"rainFlagWithDate\", \"timeArray\", \"display\"]), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, _hoisted_22, 2), _createVNode(_component_Chart4, {\n    pm2_5Array: $data.pm2_5Array,\n    timeArrayForAirPollution: $data.timeArrayForAirPollution,\n    display: $data.display\n  }, null, 8, [\"pm2_5Array\", \"timeArrayForAirPollution\", \"display\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","action","_hoisted_12","_hoisted_15","_hoisted_17","_hoisted_19","_hoisted_21","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","placeholder","$data","keyword","$event","value","onClick","_cache","_withModifiers","args","$options","getForecast","_normalizeClass","data","display","_hoisted_4","_hoisted_5","_toDisplayString","city","country","_hoisted_6","currentTime","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","current_weather_desc","_hoisted_11","current_temp","current_wind","current_rain","_hoisted_14","_createVNode","_component_Chart1","temperatureArray","timeArray","_component_Chart2","windArray","_component_Chart3","rainArray","rainFlagWithDate","_component_Chart4","pm2_5Array","timeArrayForAirPollution"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"contents\">\n    <h1 class=\"app-title\">Weather Forecast App</h1>\n    <form action>\n        <input class=\"input-box\" type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n        <input class=\"go-button\" type=\"submit\" value=\"Go!\" @click.prevent=\"getForecast\" />\n    </form>\n  \n    <span :class=\"{data : !display}\">\n      <div class=\"city-time\">\n        <h2 class=\"city-info\">{{city}}({{country}})</h2>\n        <h3 class=\"time-info\">Current Local Time: {{currentTime}}</h3>\n      </div>\n      <div class=\"current_weather\">\n        <h3 class=\"weather-title\">Current Weather</h3>\n        <div class=\"info\">\n          <h3 class=\"weather-desc\">{{current_weather_desc}}</h3>\n          <h4 class=\"temperature-info\">Temperature: {{current_temp}}°C, Wind Speed: {{current_wind}} meter/sec{{current_rain}}</h4>\n        </div>\n      </div>\n    </span>\n  \n    \n    <span :class=\"{data : !display}\">\n      <h3 class=\"forecast-title\">Weather Forecast</h3>\n    </span>\n    <div class=\"forecast\">\n      <span :class=\"{data : !display}\">\n        <p class=\"temp\">Temperature(°C)</p>\n      </span>\n      <Chart1 :temperatureArray=\"temperatureArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <span :class=\"{data : !display}\">\n        <p class=\"wind\">Wind Speed(meter/sec)</p>\n      </span>\n      <Chart2 :windArray=\"windArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <span :class=\"{data : !display}\">\n        <p class=\"rain\">Rain Volume(mm/3h)</p>\n      </span>\n      <Chart3 :rainArray=\"rainArray\" :rainFlagWithDate=\"rainFlagWithDate\" :timeArray=\"timeArray\" :display=\"display\"/>\n      <span :class=\"{data : !display}\">\n        <p class=\"pm2_5\">PM2.5 Concentration(μg/m3)</p>\n      </span>\n      <Chart4 :pm2_5Array=\"pm2_5Array\" :timeArrayForAirPollution=\"timeArrayForAirPollution\" :display=\"display\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Chart1 from './components/Chart1.vue'\nimport Chart2 from './components/Chart2.vue'\nimport Chart3 from './components/Chart3.vue'\nimport Chart4 from './components/Chart4.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: [],\n      rainArray: [],\n      rainFlagWithDate: {},\n      pm2_5Array: [],\n      timeArrayForAirPollution: [],\n      current_weather_desc: \"\",\n      current_temp: \"\",\n      current_wind: \"\",\n      current_rain: \"\"\n    }\n  },\n  methods: {\n    getForecast: function() {\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.forecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n      })\n    },\n    forecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      const time_data = data.current_time\n      this.currentTime = time_data.datetime\n\n      let text = data.current_weather.weather[0].description\n      this.current_weather_desc = text.slice( 0, 1 ).toUpperCase() + text.slice( 1 ) ;\n      this.current_temp = data.current_weather.main.temp\n      this.current_wind = data.current_weather.wind.speed\n      if(\"rain\" in data.current_weather) {\n        const rain = data.current_weather.rain[\"1h\"]\n        this.current_rain = \", Rain Volume: \" + rain + \"mm/h\"\n      }\n\n\n      const timezone_id = time_data.timezone_location\n      let temperatureArray = []\n      let windArray = []\n      let rainArray = []\n      let timeArray = []\n      let rainFlagWithDate = {}\n      let datetimeArray = []\n      for(let i = 0; i < data.list.length; i++)\n      {\n          const UTCDatetime = data.list[i].dt_txt\n          const year = UTCDatetime.substr(0, 4)\n          const month = UTCDatetime.substr(5, 2)\n          const day = UTCDatetime.substr(8, 2)\n          const hour = UTCDatetime.substr(11, 2)\n          const minute = UTCDatetime.substr(14, 2)\n          const second = UTCDatetime.substr(17, 2)\n          const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second))\n          let localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id,  hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n          localDatetime = localDatetime.replaceAll(\".\", \"\")\n\n          datetimeArray[i] = localDatetime\n\n          let datetimeForX = localDatetime.substring(8)\n          if(datetimeForX === \"00 am\" || datetimeForX === \"01 am\" || datetimeForX === \"02 am\") {\n            datetimeForX = localDatetime.substring(0, 6)\n          }\n          else {\n            if(datetimeForX === \"00 pm\") {\n              datetimeForX = \"12 pm\"\n            }\n            datetimeForX = datetimeForX.replace(\" \", \"\")\n            let position = datetimeForX.search(\"0\")\n            if(position === 0) {\n              datetimeForX = datetimeForX.replace(\"0\", \"\")\n            }\n          }\n          timeArray[i] = datetimeForX\n          let date = localDatetime.substring(0, 6)\n          rainFlagWithDate[date] = false\n\n          const temprature = data.list[i].main.temp\n          temperatureArray[i] = temprature\n\n          const windSpeed = data.list[i].wind.speed\n          windArray[i] = windSpeed\n\n          if(\"rain\" in data.list[i]) {\n            const rainfall = data.list[i].rain[\"3h\"]\n            rainArray[i] = rainfall\n          }\n          else {\n            const rainfall = 0\n            rainArray[i] = rainfall\n          }\n      }\n      this.temperatureArray = temperatureArray\n      this.windArray = windArray\n      this.rainArray = rainArray\n      this.timeArray = timeArray\n\n      for(let p = 0; p < rainArray.length; p++) {\n        const rain = rainArray[p]\n        if(rain > 0) {\n          let datetime = datetimeArray[p]\n          let date = datetime.substring(0, 6)\n          rainFlagWithDate[date] = true\n        }\n      }\n      this.rainFlagWithDate = rainFlagWithDate\n\n      let timeArrayForAirPollution = []\n      let pm2_5Array = []\n      for(let q = 0; q < data.air_pollution.list.length; q++) {\n        const unix = data.air_pollution.list[q].dt\n        const d = new Date(unix * 1000)\n        let localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id,  hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n        localDatetime = localDatetime.replaceAll(\".\", \"\")\n        let datetimeForX = localDatetime.substring(8)\n        if(datetimeForX === \"00 am\") {\n          datetimeForX = localDatetime.substring(0, 6)\n        }\n        else {\n          if(datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\"\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\")\n          let position = datetimeForX.search(\"0\")\n          if(position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\")\n          }\n        }\n        timeArrayForAirPollution[q] = datetimeForX\n\n        const pm2_5 = data.air_pollution.list[q].components.pm2_5\n        pm2_5Array[q] = pm2_5\n      }\n      this.pm2_5Array = pm2_5Array\n      this.timeArrayForAirPollution = timeArrayForAirPollution\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3,\n    Chart4\n  }\n}\n</script>\n\n<style>\n#app .contents {\n  padding-left: 20px;\n}\n\n#app .app-title {\n  font-size: 50px;\n}\n\n#app .input-box {\n  width: 300px;\n  height: 40px;\n  font-size: 30px;\n}\n\n#app .go-button {\n  height: 42px;\n  font-size: 30px;\n}\n\n#app span.data {\n  display: none;\n}\n\n#app .city-time {\n  position: relative;\n}\n\n#app .city-info {\n  font-size: 45px;\n}\n\n#app .time-info {\n  font-size: 25px;\n  text-align: center;\n  position: absolute;\n\ttop: 50%;\n}\n\n#app .weather-title {\n  font-size: 30px;\n  margin-bottom: 0;\n  padding-top: 35px;\n}\n\n#app .info {\n  padding-left: 15px;\n}\n\n#app .weather-desc {\n  font-size: 25px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n#app .temperature-info {\n  font-size: 20px;\n  margin-top: 0;\n}\n\n#app .forecast-title {\n  font-size: 30px;\n  margin-bottom: 0;\n}\n\n#app .forecast {\n  padding-left: 15px;\n}\n\n#app .temp {\n  font-size: 20px;\n  font-weight: bold;\n}\n\n#app .wind {\n  font-size: 20px;\n  font-weight: bold;\n}\n\n#app .rain {\n  font-size: 20px;\n  font-weight: bold;\n}\n\n#app .pm2_5 {\n  font-size: 20px;\n  font-weight: bold;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}