{"ast":null,"code":"//import HelloWorld from './components/HelloWorld.vue'\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\"\n    };\n  },\n  methods: {\n    getForecast: function () {\n      if (this.keyword === \"\") {\n        console.log(\"emp\");\n        return;\n      }\n      console.log(this.keyword);\n      axios.post('http://localhost:3000/sendData', {\n        keyword: this.keyword\n      }).then(response => {\n        console.log(response.data);\n        this.displayForecast(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    displayForecast: function (data) {\n      this.display = true;\n      const city = data.city_country[0];\n      const country = data.city_country[1];\n      this.city = city;\n      this.country = country;\n      const time_data = data.current_time;\n      this.currentTime = time_data.datetime;\n      const timezone_id = time_data.timezone_location;\n      let datetimeArray = [];\n      for (var i = 0; i < data.list.length; i++) {\n        const UTCDatetime = data.list[i].dt_txt;\n        const year = UTCDatetime.substr(0, 4);\n        const month = UTCDatetime.substr(5, 2);\n        const day = UTCDatetime.substr(8, 2);\n        const hour = UTCDatetime.substr(11, 2);\n        const minute = UTCDatetime.substr(14, 2);\n        const second = UTCDatetime.substr(17, 2);\n        const d = new Date(year, month - 1, day, hour, minute, second);\n        const localDatetime = d.toLocaleString(\"en-IE\", {\n          timeZone: timezone_id\n        });\n        datetimeArray[i] = localDatetime;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","keyword","display","country","city","currentTime","methods","getForecast","console","log","post","then","response","displayForecast","catch","error","city_country","time_data","current_time","datetime","timezone_id","timezone_location","datetimeArray","i","list","length","UTCDatetime","dt_txt","year","substr","month","day","hour","minute","second","d","Date","localDatetime","toLocaleString","timeZone"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <h1>Weather Forecast App</h1>\n        <form action>\n            <input type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n            <input type=\"submit\" value=\"Go!\" @click.prevent=\"getForecast\" />\n        </form>\n\n        <span :class=\"{data : !display}\">\n            <h2>{{city}}({{country}})</h2>\n            <h3>Current Local Time: {{currentTime}}</h3>\n        </span>\n</template>\n\n<script>\n//import HelloWorld from './components/HelloWorld.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n        display: false,\n        country: \"\",\n        city: \"\",\n        currentTime: \"\"\n    }\n  },\n  methods: {\n    getForecast: function() {\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.displayForecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n      })\n    },\n    displayForecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      const time_data = data.current_time\n      this.currentTime = time_data.datetime\n\n      const timezone_id = time_data.timezone_location\n      let datetimeArray = []\n      for(var i = 0; i < data.list.length; i++)\n      {\n          const UTCDatetime = data.list[i].dt_txt\n          const year = UTCDatetime.substr(0, 4)\n          const month = UTCDatetime.substr(5, 2)\n          const day = UTCDatetime.substr(8, 2)\n          const hour = UTCDatetime.substr(11, 2)\n          const minute = UTCDatetime.substr(14, 2)\n          const second = UTCDatetime.substr(17, 2)\n          const d = new Date(year, month - 1, day, hour, minute, second)\n          const localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id })\n          datetimeArray[i] = localDatetime\n      }\n    },\n  }\n}\n</script>\n\n<style>\n#app span.data {\n  display: none;\n}\n</style>\n"],"mappings":"AAcA;AACA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACTC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,EAAE,SAAAA,CAAA,EAAW;MACtB,IAAG,IAAI,CAACN,OAAM,KAAM,EAAE,EACtB;QACIO,OAAO,CAACC,GAAG,CAAC,KAAK;QACjB;MACJ;MACAD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO;MACxBH,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAE;QAAET,OAAO,EAAE,IAAI,CAACA;MAAQ,CAAC,EACrEU,IAAI,CAACC,QAAO,IAAK;QACdJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACZ,IAAI;QACzB,IAAI,CAACa,eAAe,CAACD,QAAQ,CAACZ,IAAI;MACtC,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACZP,OAAO,CAACO,KAAK,CAACA,KAAK;MACvB,CAAC;IACH,CAAC;IACDF,eAAe,EAAE,SAAAA,CAASb,IAAI,EAAE;MAC9B,IAAI,CAACE,OAAM,GAAI,IAAG;MAClB,MAAME,IAAG,GAAIJ,IAAI,CAACgB,YAAY,CAAC,CAAC;MAChC,MAAMb,OAAM,GAAIH,IAAI,CAACgB,YAAY,CAAC,CAAC;MACnC,IAAI,CAACZ,IAAG,GAAIA,IAAG;MACf,IAAI,CAACD,OAAM,GAAIA,OAAM;MAErB,MAAMc,SAAQ,GAAIjB,IAAI,CAACkB,YAAW;MAClC,IAAI,CAACb,WAAU,GAAIY,SAAS,CAACE,QAAO;MAEpC,MAAMC,WAAU,GAAIH,SAAS,CAACI,iBAAgB;MAC9C,IAAIC,aAAY,GAAI,EAAC;MACrB,KAAI,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIvB,IAAI,CAACwB,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EACxC;QACI,MAAMG,WAAU,GAAI1B,IAAI,CAACwB,IAAI,CAACD,CAAC,CAAC,CAACI,MAAK;QACtC,MAAMC,IAAG,GAAIF,WAAW,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC;QACpC,MAAMC,KAAI,GAAIJ,WAAW,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC;QACrC,MAAME,GAAE,GAAIL,WAAW,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC;QACnC,MAAMG,IAAG,GAAIN,WAAW,CAACG,MAAM,CAAC,EAAE,EAAE,CAAC;QACrC,MAAMI,MAAK,GAAIP,WAAW,CAACG,MAAM,CAAC,EAAE,EAAE,CAAC;QACvC,MAAMK,MAAK,GAAIR,WAAW,CAACG,MAAM,CAAC,EAAE,EAAE,CAAC;QACvC,MAAMM,CAAA,GAAI,IAAIC,IAAI,CAACR,IAAI,EAAEE,KAAI,GAAI,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM;QAC7D,MAAMG,aAAY,GAAIF,CAAC,CAACG,cAAc,CAAC,OAAO,EAAE;UAAEC,QAAQ,EAAEnB;QAAY,CAAC;QACzEE,aAAa,CAACC,CAAC,IAAIc,aAAY;MACnC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}