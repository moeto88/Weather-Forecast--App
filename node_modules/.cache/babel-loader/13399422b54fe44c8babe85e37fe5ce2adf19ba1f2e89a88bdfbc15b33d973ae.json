{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-38fd675b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chartBox\"\n};\nconst _hoisted_2 = {\n  class: \"colSmall\"\n};\nconst _hoisted_3 = {\n  class: \"colLarge\"\n};\nconst _hoisted_4 = {\n  class: \"box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Line, {\n    id: \"my-chart-id\",\n    options: $data.chartOptions2,\n    data: $data.chartData2\n  }, null, 8, [\"options\", \"data\"])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_Line, {\n    id: \"my-chart-id\",\n    options: $data.chartOptions1,\n    data: $data.chartData1\n  }, null, 8, [\"options\", \"data\"])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_Line","id","options","$data","chartOptions2","data","chartData2","_hoisted_3","_hoisted_4","chartOptions1","chartData1"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/components/Chart.vue"],"sourcesContent":["<template>\n    <div class=\"chartBox\">\n        <div class=\"colSmall\">\n            <Line id=\"my-chart-id\" :options=\"chartOptions2\" :data=\"chartData2\"/>\n        </div>\n        <div class=\"colLarge\">\n            <div class=\"box\">\n                <Line id=\"my-chart-id\" :options=\"chartOptions1\" :data=\"chartData1\"/>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { Line } from 'vue-chartjs'\n    import 'chart.js/auto'\n\n    export default {\n        // eslint-disable-next-line vue/multi-word-component-names\n        name: \"Chart\",\n        // props: [\"display\"],\n        components: { Line },\n        data() {\n            return {\n                chartData1: {\n                    labels: [ 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March'],\n                    backgroundColor: '#f87979',\n                    datasets: [ { data: [40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12] } ]\n                },\n                chartOptions1: {\n                    maintainAspectRatio: false,\n                    layout: {\n                        padding: {\n                            top: 9,\n                            bottom: 15\n                        }\n                    },\n                    responsive: true,\n                    scales: {\n                        y: {\n                            ticks: {\n                                display: false\n                            },\n                            grid: {\n                                drawTicks: false,\n                                drawBorder: false\n                            }\n                        }\n                    },\n                    plugins: {\n                        legend: {\n                            display: false\n                        },\n                        annotation: {\n                            annotations: {\n                                line1: {\n                                    type: \"line\",\n                                    \n                                }\n                            }\n                        }\n                    }\n                },\n                chartData2: {\n                    labels: [ 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March', 'January', 'February', 'March'],\n                    backgroundColor: '#f87979',\n                    datasets: [ \n                        { \n                            data: [40, 20, 12, 40, 20, 12, 40, 20, 12, 40, 20, 12, \n                            40, 20, 12, 40, 20, 12, 40, 20, 12, \n                            40, 20, 12, 40, 20, 12, 40, 20, 12],\n                            borderWidth: 0\n                        } \n                    ]\n                },\n                chartOptions2: {\n                    maintainAspectRatio: false,\n                    layout: {\n                        padding: {\n                            bottom: 44\n                        }\n                    },\n                    responsive: true,\n                    scales: {\n                        x: {\n                            ticks: {\n                                display: false\n                            },\n                            grid: {\n                                drawTicks:false\n                            }\n                        },\n                        y: {\n                            afterFit: (ctx) => {\n                                ctx.width = 35\n                            }\n                        }\n                    },\n                    plugins: {\n                        legend: {\n                            display: false\n                        }\n                    },\n                    elements: {\n                        point:{\n                            radius: 0\n                        }\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .chartBox {\n        width: 700px;\n        display: flex;\n    }\n    .colSmall {\n        width: 35px;\n\n    }\n    .colLarge {\n        max-width: 700px;\n        overflow-x: scroll;\n    }\n    .box {\n        width: 2000px;\n        height: 500px;\n    }\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAU;;EAGhBA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAK;;;uBALxBC,mBAAA,CASM,OATNC,UASM,GARFC,mBAAA,CAEM,OAFNC,UAEM,GADFC,YAAA,CAAoEC,eAAA;IAA9DC,EAAE,EAAC,aAAa;IAAEC,OAAO,EAAEC,KAAA,CAAAC,aAAa;IAAGC,IAAI,EAAEF,KAAA,CAAAG;sCAE3DT,mBAAA,CAIM,OAJNU,UAIM,GAHFV,mBAAA,CAEM,OAFNW,UAEM,GADFT,YAAA,CAAoEC,eAAA;IAA9DC,EAAE,EAAC,aAAa;IAAEC,OAAO,EAAEC,KAAA,CAAAM,aAAa;IAAGJ,IAAI,EAAEF,KAAA,CAAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}