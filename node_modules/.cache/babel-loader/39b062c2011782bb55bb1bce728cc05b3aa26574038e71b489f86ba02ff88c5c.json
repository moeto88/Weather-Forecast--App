{"ast":null,"code":"import Chart1 from './components/Chart1.vue';\nimport Chart2 from './components/Chart2.vue';\nimport Chart3 from './components/Chart3.vue';\nimport Chart4 from './components/Chart4.vue';\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: [],\n      rainArray: [],\n      rainFlagWithDate: {},\n      pm2_5Array: [],\n      timeArrayForAirPollution: [],\n      current_weather_desc: \"\",\n      current_temp: \"\",\n      current_wind: \"\",\n      current_rain: \"\"\n    };\n  },\n  methods: {\n    getForecast: function () {\n      if (this.keyword === \"\") {\n        console.log(\"emp\");\n        return;\n      }\n      console.log(this.keyword);\n      axios.post('http://localhost:3000/sendData', {\n        keyword: this.keyword\n      }).then(response => {\n        console.log(response.data);\n        this.forecast(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    forecast: function (data) {\n      this.display = true;\n      const city = data.city_country[0];\n      const country = data.city_country[1];\n      this.city = city;\n      this.country = country;\n      const time_data = data.current_time;\n      this.currentTime = time_data.datetime;\n      let text = data.current_weather.weather[0].description;\n      this.current_weather_desc = text.slice(0, 1).toUpperCase() + text.slice(1);\n      this.current_temp = data.current_weather.main.temp;\n      this.current_wind = data.current_weather.wind.speed;\n      if (\"rain\" in data.current_weather) {\n        const rain = data.current_weather.rain[\"1h\"];\n        this.current_rain = \", Rain Volume: \" + rain + \"mm/h\";\n      }\n      const timezone_id = time_data.timezone_location;\n      let temperatureArray = [];\n      let windArray = [];\n      let rainArray = [];\n      let timeArray = [];\n      let rainFlagWithDate = {};\n      let datetimeArray = [];\n      for (let i = 0; i < data.list.length; i++) {\n        const UTCDatetime = data.list[i].dt_txt;\n        const year = UTCDatetime.substr(0, 4);\n        const month = UTCDatetime.substr(5, 2);\n        const day = UTCDatetime.substr(8, 2);\n        const hour = UTCDatetime.substr(11, 2);\n        const minute = UTCDatetime.substr(14, 2);\n        const second = UTCDatetime.substr(17, 2);\n        const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\n        let localDatetime = d.toLocaleString(\"en-IE\", {\n          timeZone: timezone_id,\n          hour12: true,\n          month: \"short\",\n          day: \"2-digit\",\n          hour: \"2-digit\"\n        });\n        localDatetime = localDatetime.replaceAll(\".\", \"\");\n        datetimeArray[i] = localDatetime;\n        let datetimeForX = localDatetime.substring(8);\n        if (datetimeForX === \"00 am\" || datetimeForX === \"01 am\" || datetimeForX === \"02 am\") {\n          datetimeForX = localDatetime.substring(0, 6);\n        } else {\n          if (datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\";\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\");\n          let position = datetimeForX.search(\"0\");\n          if (position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\");\n          }\n        }\n        timeArray[i] = datetimeForX;\n        let date = localDatetime.substring(0, 6);\n        rainFlagWithDate[date] = false;\n        const temprature = data.list[i].main.temp;\n        temperatureArray[i] = temprature;\n        const windSpeed = data.list[i].wind.speed;\n        windArray[i] = windSpeed;\n        if (\"rain\" in data.list[i]) {\n          const rainfall = data.list[i].rain[\"3h\"];\n          rainArray[i] = rainfall;\n        } else {\n          const rainfall = 0;\n          rainArray[i] = rainfall;\n        }\n      }\n      this.temperatureArray = temperatureArray;\n      this.windArray = windArray;\n      this.rainArray = rainArray;\n      this.timeArray = timeArray;\n      for (let p = 0; p < rainArray.length; p++) {\n        const rain = rainArray[p];\n        if (rain > 0) {\n          let datetime = datetimeArray[p];\n          let date = datetime.substring(0, 6);\n          rainFlagWithDate[date] = true;\n        }\n      }\n      this.rainFlagWithDate = rainFlagWithDate;\n      let timeArrayForAirPollution = [];\n      let pm2_5Array = [];\n      for (let q = 0; q < data.air_pollution.list.length; q++) {\n        const unix = data.air_pollution.list[q].dt;\n        const d = new Date(unix * 1000);\n        let localDatetime = d.toLocaleString(\"en-IE\", {\n          timeZone: timezone_id,\n          hour12: true,\n          month: \"short\",\n          day: \"2-digit\",\n          hour: \"2-digit\"\n        });\n        localDatetime = localDatetime.replaceAll(\".\", \"\");\n        let datetimeForX = localDatetime.substring(8);\n        if (datetimeForX === \"00 am\") {\n          datetimeForX = localDatetime.substring(0, 6);\n        } else {\n          if (datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\";\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\");\n          let position = datetimeForX.search(\"0\");\n          if (position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\");\n          }\n        }\n        timeArrayForAirPollution[q] = datetimeForX;\n        const pm2_5 = data.air_pollution.list[q].components.pm2_5;\n        pm2_5Array[q] = pm2_5;\n      }\n      this.pm2_5Array = pm2_5Array;\n      this.timeArrayForAirPollution = timeArrayForAirPollution;\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3,\n    Chart4\n  }\n};","map":{"version":3,"names":["Chart1","Chart2","Chart3","Chart4","axios","name","data","keyword","display","country","city","currentTime","timeArray","temperatureArray","windArray","rainArray","rainFlagWithDate","pm2_5Array","timeArrayForAirPollution","current_weather_desc","current_temp","current_wind","current_rain","methods","getForecast","console","log","post","then","response","forecast","catch","error","city_country","time_data","current_time","datetime","text","current_weather","weather","description","slice","toUpperCase","main","temp","wind","speed","rain","timezone_id","timezone_location","datetimeArray","i","list","length","UTCDatetime","dt_txt","year","substr","month","day","hour","minute","second","d","Date","UTC","localDatetime","toLocaleString","timeZone","hour12","replaceAll","datetimeForX","substring","replace","position","search","date","temprature","windSpeed","rainfall","p","q","air_pollution","unix","dt","pm2_5","components"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <h1>Weather Forecast App</h1>\n  <form action>\n      <input type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n      <input type=\"submit\" value=\"Go!\" @click.prevent=\"getForecast\" />\n  </form>\n\n  <span :class=\"{data : !display}\">\n    <div class=\"city-time\">\n      <h2 class=\"city-info\">{{city}}({{country}})</h2>\n      <h3 class=\"time-info\">Current Local Time: {{currentTime}}</h3>\n    </div>\n    <div class=\"current_weather\">\n      <h3 class=\"weather-title\">Current Weather</h3>\n      <h3 class=\"weather-desc\">{{current_weather_desc}}</h3>\n      <h4 class=\"temperature-info\">Temperature: {{current_temp}}°C, Wind Speed: {{current_wind}} meter/sec{{current_rain}}</h4>\n    </div>\n  </span>\n\n  <div class=\"forecast\">\n    <span :class=\"{data : !display}\">\n      <h3 class=\"forecast-title\">Weather Forecast</h3>\n    </span>\n    <span :class=\"{data : !display}\">\n      <p class=\"temp\">Temperature(°C)</p>\n    </span>\n    <Chart1 :temperatureArray=\"temperatureArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n    <span :class=\"{data : !display}\">\n      <p class=\"wind\">Wind Speed(meter/sec)</p>\n    </span>\n    <Chart2 :windArray=\"windArray\" :timeArray=\"timeArray\" :display=\"display\"/>\n    <span :class=\"{data : !display}\">\n      <p class=\"rain\">Rain Volume(mm/3h)</p>\n    </span>\n    <Chart3 :rainArray=\"rainArray\" :rainFlagWithDate=\"rainFlagWithDate\" :timeArray=\"timeArray\" :display=\"display\"/>\n    <span :class=\"{data : !display}\">\n      <p class=\"pm2_5\">PM2.5 Concentration(μg/m3)</p>\n    </span>\n    <Chart4 :pm2_5Array=\"pm2_5Array\" :timeArrayForAirPollution=\"timeArrayForAirPollution\" :display=\"display\"/>\n  </div>\n</template>\n\n<script>\nimport Chart1 from './components/Chart1.vue'\nimport Chart2 from './components/Chart2.vue'\nimport Chart3 from './components/Chart3.vue'\nimport Chart4 from './components/Chart4.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n      display: false,\n      country: \"\",\n      city: \"\",\n      currentTime: \"\",\n      timeArray: [],\n      temperatureArray: [],\n      windArray: [],\n      rainArray: [],\n      rainFlagWithDate: {},\n      pm2_5Array: [],\n      timeArrayForAirPollution: [],\n      current_weather_desc: \"\",\n      current_temp: \"\",\n      current_wind: \"\",\n      current_rain: \"\"\n    }\n  },\n  methods: {\n    getForecast: function() {\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.forecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n      })\n    },\n    forecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      const time_data = data.current_time\n      this.currentTime = time_data.datetime\n\n      let text = data.current_weather.weather[0].description\n      this.current_weather_desc = text.slice( 0, 1 ).toUpperCase() + text.slice( 1 ) ;\n      this.current_temp = data.current_weather.main.temp\n      this.current_wind = data.current_weather.wind.speed\n      if(\"rain\" in data.current_weather) {\n        const rain = data.current_weather.rain[\"1h\"]\n        this.current_rain = \", Rain Volume: \" + rain + \"mm/h\"\n      }\n\n\n      const timezone_id = time_data.timezone_location\n      let temperatureArray = []\n      let windArray = []\n      let rainArray = []\n      let timeArray = []\n      let rainFlagWithDate = {}\n      let datetimeArray = []\n      for(let i = 0; i < data.list.length; i++)\n      {\n          const UTCDatetime = data.list[i].dt_txt\n          const year = UTCDatetime.substr(0, 4)\n          const month = UTCDatetime.substr(5, 2)\n          const day = UTCDatetime.substr(8, 2)\n          const hour = UTCDatetime.substr(11, 2)\n          const minute = UTCDatetime.substr(14, 2)\n          const second = UTCDatetime.substr(17, 2)\n          const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second))\n          let localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id,  hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n          localDatetime = localDatetime.replaceAll(\".\", \"\")\n\n          datetimeArray[i] = localDatetime\n\n          let datetimeForX = localDatetime.substring(8)\n          if(datetimeForX === \"00 am\" || datetimeForX === \"01 am\" || datetimeForX === \"02 am\") {\n            datetimeForX = localDatetime.substring(0, 6)\n          }\n          else {\n            if(datetimeForX === \"00 pm\") {\n              datetimeForX = \"12 pm\"\n            }\n            datetimeForX = datetimeForX.replace(\" \", \"\")\n            let position = datetimeForX.search(\"0\")\n            if(position === 0) {\n              datetimeForX = datetimeForX.replace(\"0\", \"\")\n            }\n          }\n          timeArray[i] = datetimeForX\n          let date = localDatetime.substring(0, 6)\n          rainFlagWithDate[date] = false\n\n          const temprature = data.list[i].main.temp\n          temperatureArray[i] = temprature\n\n          const windSpeed = data.list[i].wind.speed\n          windArray[i] = windSpeed\n\n          if(\"rain\" in data.list[i]) {\n            const rainfall = data.list[i].rain[\"3h\"]\n            rainArray[i] = rainfall\n          }\n          else {\n            const rainfall = 0\n            rainArray[i] = rainfall\n          }\n      }\n      this.temperatureArray = temperatureArray\n      this.windArray = windArray\n      this.rainArray = rainArray\n      this.timeArray = timeArray\n\n      for(let p = 0; p < rainArray.length; p++) {\n        const rain = rainArray[p]\n        if(rain > 0) {\n          let datetime = datetimeArray[p]\n          let date = datetime.substring(0, 6)\n          rainFlagWithDate[date] = true\n        }\n      }\n      this.rainFlagWithDate = rainFlagWithDate\n\n      let timeArrayForAirPollution = []\n      let pm2_5Array = []\n      for(let q = 0; q < data.air_pollution.list.length; q++) {\n        const unix = data.air_pollution.list[q].dt\n        const d = new Date(unix * 1000)\n        let localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id,  hour12: true, month: \"short\", day: \"2-digit\", hour: \"2-digit\"})\n        localDatetime = localDatetime.replaceAll(\".\", \"\")\n        let datetimeForX = localDatetime.substring(8)\n        if(datetimeForX === \"00 am\") {\n          datetimeForX = localDatetime.substring(0, 6)\n        }\n        else {\n          if(datetimeForX === \"00 pm\") {\n            datetimeForX = \"12 pm\"\n          }\n          datetimeForX = datetimeForX.replace(\" \", \"\")\n          let position = datetimeForX.search(\"0\")\n          if(position === 0) {\n            datetimeForX = datetimeForX.replace(\"0\", \"\")\n          }\n        }\n        timeArrayForAirPollution[q] = datetimeForX\n\n        const pm2_5 = data.air_pollution.list[q].components.pm2_5\n        pm2_5Array[q] = pm2_5\n      }\n      this.pm2_5Array = pm2_5Array\n      this.timeArrayForAirPollution = timeArrayForAirPollution\n    }\n  },\n  components: {\n    Chart1,\n    Chart2,\n    Chart3,\n    Chart4\n  }\n}\n</script>\n\n<style>\n#app span.data {\n  display: none;\n}\n\n#app .city-info {\n  font-size: 40px;\n}\n\n#app .time-info {\n  font-size: 20px;\n}\n\n#app .city-time {\n  display: inline;\n}\n\n#app .weather-title {\n  font-size: 30px;\n}\n\n#app .weather-desc {\n  font-size: 20px;\n}\n\n#app .temperature-info {\n  font-size: 18px;\n}\n\n#app .forecast-title {\n  font-size: 30px;\n}\n\n#app .temp {\n  font-size: 20px;\n}\n\n#app .wind {\n  font-size: 20px;\n}\n\n#app .rain {\n  font-size: 20px;\n}\n\n#app .pm2_5 {\n  font-size: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}