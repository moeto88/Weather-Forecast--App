{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Weather Forecast App\", -1);\nconst _hoisted_2 = {\n  action: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Chart = _resolveComponent(\"Chart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"form\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"type in a city name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event)\n  }, null, 512), [[_vModelText, $data.keyword]]), _createElementVNode(\"input\", {\n    type: \"submit\",\n    value: \"Go!\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.getForecast && $options.getForecast(...args), [\"prevent\"]))\n  })]), _createElementVNode(\"span\", {\n    class: _normalizeClass({\n      data: !$data.display\n    })\n  }, [_createElementVNode(\"h2\", null, _toDisplayString($data.city) + \"(\" + _toDisplayString($data.country) + \")\", 1), _createElementVNode(\"h3\", null, \"Current Local Time: \" + _toDisplayString($data.currentTime), 1), _createVNode(_component_Chart)], 2)], 64);\n}","map":{"version":3,"names":["_createElementVNode","action","_hoisted_1","_hoisted_2","type","placeholder","$data","keyword","$event","value","onClick","_cache","_withModifiers","args","$options","getForecast","class","_normalizeClass","data","display","_toDisplayString","city","country","currentTime","_createVNode","_component_Chart"],"sources":["/Users/SonodaMoeto/Desktop/Internet Application/vue-express/vue-express-sample/src/App.vue"],"sourcesContent":["<template>\n  <h1>Weather Forecast App</h1>\n  <form action>\n      <input type=\"text\" placeholder=\"type in a city name\" v-model=\"keyword\">\n      <input type=\"submit\" value=\"Go!\" @click.prevent=\"getForecast\" />\n  </form>\n\n  <span :class=\"{data : !display}\">\n      <h2>{{city}}({{country}})</h2>\n      <h3>Current Local Time: {{currentTime}}</h3>\n      <Chart></Chart>\n  </span>\n</template>\n\n<script>\nimport Chart from './components/Chart.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keyword: \"\",\n        display: false,\n        country: \"\",\n        city: \"\",\n        currentTime: \"\"\n    }\n  },\n  methods: {\n    getForecast: function() {\n      if(this.keyword === \"\")\n      {\n          console.log(\"emp\")\n          return\n      }\n      console.log(this.keyword)\n      axios.post('http://localhost:3000/sendData', { keyword: this.keyword })\n      .then(response => {\n          console.log(response.data)\n          this.displayForecast(response.data)\n      })\n      .catch(error => {\n          console.error(error)\n      })\n    },\n    displayForecast: function(data) {\n      this.display = true\n      const city = data.city_country[0]\n      const country = data.city_country[1]\n      this.city = city\n      this.country = country\n      \n      const time_data = data.current_time\n      this.currentTime = time_data.datetime\n\n      const timezone_id = time_data.timezone_location\n      let datetimeArray = []\n      for(var i = 0; i < data.list.length; i++)\n      {\n          const UTCDatetime = data.list[i].dt_txt\n          const year = UTCDatetime.substr(0, 4)\n          const month = UTCDatetime.substr(5, 2)\n          const day = UTCDatetime.substr(8, 2)\n          const hour = UTCDatetime.substr(11, 2)\n          const minute = UTCDatetime.substr(14, 2)\n          const second = UTCDatetime.substr(17, 2)\n          const d = new Date(year, month - 1, day, hour, minute, second)\n          const localDatetime = d.toLocaleString(\"en-IE\", { timeZone: timezone_id })\n          datetimeArray[i] = localDatetime\n      }\n    }\n  },\n  components: {\n    Chart,\n  }\n}\n</script>\n\n<style>\n#app span.data {\n  display: none;\n}\n</style>\n"],"mappings":";gCACEA,mBAAA,CAA6B,YAAzB,sBAAoB;;EAClBC,MAAM,EAAN;AAAM;;;6DADZC,UAA6B,EAC7BF,mBAAA,CAGO,QAHPG,UAGO,G,gBAFHH,mBAAA,CAAuE;IAAhEI,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,qBAAqB;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;gCAAPF,KAAA,CAAAC,OAAO,E,GACrEP,mBAAA,CAAgE;IAAzDI,IAAI,EAAC,QAAQ;IAACK,KAAK,EAAC,KAAK;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;QAGhEb,mBAAA,CAIO;IAJAgB,KAAK,EAAAC,eAAA;MAAAC,IAAA,GAAWZ,KAAA,CAAAa;IAAO;MAC1BnB,mBAAA,CAA8B,YAAAoB,gBAAA,CAAxBd,KAAA,CAAAe,IAAI,IAAE,GAAC,GAAAD,gBAAA,CAAEd,KAAA,CAAAgB,OAAO,IAAE,GAAC,MACzBtB,mBAAA,CAA4C,YAAxC,sBAAoB,GAAAoB,gBAAA,CAAEd,KAAA,CAAAiB,WAAW,OACrCC,YAAA,CAAeC,gBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}